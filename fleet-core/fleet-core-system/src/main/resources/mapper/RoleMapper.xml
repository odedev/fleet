<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.osmanthus.fleet.core.system.mapper.RoleMapper">

  <resultMap id="resultMap" type="dev.osmanthus.fleet.core.system.entity.Role">
    <id property="id" column="id"/>
    <result property="code" column="code"/>
    <result property="name" column="name"/>
    <result property="note" column="note"/>
    <result property="isSystem" column="is_system"/>
  </resultMap>

  <sql id="tableColumn">
    <trim suffixOverrides=",">
      `system_role`.`id`,
      `system_role`.`code`,
      `system_role`.`name`,
      `system_role`.`note`,
      `system_role`.`is_system`,
    </trim>
  </sql>
  <sql id="column">
    <trim suffixOverrides=",">
      `id`,
      `code`,
      `name`,
      `note`,
      `is_system`,
    </trim>
  </sql>

  <sql id="insertColumn">
    <trim suffixOverrides=",">
      `id`,
      <if test="code != null">`code`,</if>
      <if test="name != null">`name`,</if>
      <if test="note != null">`note`,</if>
      <if test="isSystem != null">`is_system`,</if>
    </trim>
  </sql>
  <sql id="insertValue">
    <trim suffixOverrides=",">
      #{id},
      <if test="code != null">#{code},</if>
      <if test="name != null">#{name},</if>
      <if test="note != null">#{note},</if>
      <if test="isSystem != null">#{isSystem},</if>
    </trim>
  </sql>
  <sql id="insertEntityValue">
    <trim suffixOverrides=",">
      #{role.id},
      <if test="role.code != null">#{role.code},</if>
      <if test="role.name != null">#{role.name},</if>
      <if test="role.note != null">#{role.note},</if>
      <if test="role.isSystem != null">#{role.isSystem},</if>
    </trim>
  </sql>

  <sql id="updateColumn">
    <trim prefix="set" suffixOverrides=",">
      <if test="code != null">`code` = #{code},</if>
      <if test="name != null">`name` = #{name},</if>
      <if test="note != null">`note` = #{note},</if>
      <if test="isSystem != null">`is_system` = #{isSystem},</if>
    </trim>
  </sql>
  <sql id="updateEntityColumn">
    <trim prefix="set" suffixOverrides=",">
      <if test="role.code != null">`code` = #{role.code},</if>
      <if test="role.name != null">`name` = #{role.name},</if>
      <if test="role.note != null">`note` = #{role.note},</if>
      <if test="role.isSystem != null">`is_system` = #{role.isSystem},</if>
    </trim>
  </sql>

  <sql id="deleteColumn">
    <trim prefix="set" suffixOverrides=",">
      <if test="deletedAt != null">`deleted_at` = #{deletedAt},</if>
    </trim>
  </sql>
  <sql id="deleteEntityColumn">
    <trim prefix="set" suffixOverrides=",">
      <if test="role.deletedAt != null">`deleted_at` = #{role.deletedAt},</if>
    </trim>
  </sql>

  <select id="findOne" resultMap="resultMap" resultType="dev.osmanthus.fleet.core.system.entity.Role">
    SELECT
    <include refid="column"/>
    FROM `system_role`
    <choose>
      <when test="where != null and where != ''">
        <where>
          ${where} AND deleted_at is NULL
        </where>
      </when>
      <otherwise>
        <where>
          deleted_at is NULL
        </where>
      </otherwise>
    </choose>
    LIMIT 1
  </select>

  <select id="findMany" resultMap="resultMap" resultType="dev.osmanthus.fleet.core.system.entity.Role">
    SELECT
    <include refid="column"/>
    FROM `system_role`
    <choose>
      <when test="where != null and where != ''">
        <where>
          ${where} AND deleted_at is NULL
        </where>
      </when>
      <otherwise>
        <where>
          deleted_at is NULL
        </where>
      </otherwise>
    </choose>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY created_at DESC
      </otherwise>
    </choose>
  </select>

  <select id="findAll" resultMap="resultMap" resultType="dev.osmanthus.fleet.core.system.entity.Role">
    SELECT
    <include refid="column"/>
    FROM `system_role`
    <if test="where != null and where != ''">
      <where>
        ${where}
      </where>
    </if>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY created_at DESC
      </otherwise>
    </choose>
  </select>

  <insert id="insertOne" parameterType="dev.osmanthus.fleet.core.system.entity.Role">
    INSERT INTO `system_role`
    (<include refid="insertColumn"/>)
    VALUES
    (<include refid="insertValue"/>)
  </insert>

  <insert id="insertMany" parameterType="java.util.List">
    INSERT INTO `system_role`
    (<include refid="insertColumn"/>)
    VALUES
    <foreach collection="list" item="role" separator=",">
      (<include refid="insertEntityValue"/>)
    </foreach>
  </insert>

  <update id="updateOne" parameterType="dev.osmanthus.fleet.core.system.entity.Role">
    UPDATE `system_role`
    <include refid="updateColumn"/>
    WHERE id=#{id}
  </update>

  <!--  <update id="updateMany" parameterType="java.util.HashMap">-->
  <!--    UPDATE `role`-->
  <!--    <foreach collection="roleList" item="role" separator=",">-->
  <!--      <include refid="updateColumn"/>-->
  <!--    </foreach>-->
  <!--    WHERE id=#{id} AND updated_count=#{updatedCount, jdbcType=INTEGER}-->
  <!--  </update>-->

  <delete id="deleteOne" parameterType="java.lang.String">
    DELETE FROM `system_role` WHERE id=#{id, jdbcType=VARCHAR}
  </delete>

  <select id="count" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM `system_role`
    <if test="where != null and where != ''">
      ${where}
    </if>
    LIMIT 1
  </select>

  <select id="exist" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM `system_role`
    <if test="where != null and where != ''">
      ${where}
    </if>
    LIMIT 1
  </select>

</mapper>
