<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dev.osmanthus.fleet.tool.develop.mapper.ModuleMapper">
  <sql id="tableColumn">
    `develop_module`.`id`,
    `develop_module`.`code`,
    `develop_module`.`name`,
    `develop_module`.`description`,
    `develop_module`.`storage_type`
  </sql>
  <sql id="column">
    `id`,
    `code`,
    `name`,
    `description`,
    `storage_type`
  </sql>

  <sql id="insertColumn">
    <trim suffixOverrides=",">
      `id`,
      <if test="code != null">`code`,</if>
      <if test="name != null">`name`,</if>
      <if test="description != null">`description`,</if>
      <if test="storageType != null">`storage_type`,</if>
    </trim>
  </sql>
  <sql id="insertValue">
    <trim suffixOverrides=",">
      #{id},
      <if test="code != null">#{code},</if>
      <if test="name != null">#{name},</if>
      <if test="description != null">#{description},</if>
      <if test="storageType != null">#{storageType},</if>
    </trim>
  </sql>
  <sql id="insertEntityValue">
    <trim suffixOverrides=",">
      #{module.id},
      <if test="module.code != null">#{module.code},</if>
      <if test="module.name != null">#{module.name},</if>
      <if test="module.description != null">#{module.description},</if>
      <if test="module.storageType != null">#{module.storageType},</if>
    </trim>
  </sql>

  <sql id="updateColumn">
    <trim prefix="set" suffixOverrides=",">
      <if test="code != null">`code` = #{code},</if>
      <if test="name != null">`name` = #{name},</if>
      <if test="description != null">`description` = #{description},</if>
      <if test="storageType != null">`storage_type` = #{storageType},</if>
    </trim>
  </sql>
  <sql id="updateEntityColumn">
    <trim prefix="set" suffixOverrides=",">
      <if test="module.code != null">`code` = #{module.code},</if>
      <if test="module.name != null">`name` = #{module.name},</if>
      <if test="module.description != null">`description` = #{module.description},</if>
      <if test="module.storageType != null">`storage_type` = #{module.storageType},</if>
    </trim>
  </sql>

  <resultMap id="resultMap" type="dev.osmanthus.fleet.tool.develop.entity.Module">
    <id property="id" column="id"/>
    <result property="code" column="code"/>
    <result property="name" column="name"/>
    <result property="description" column="description"/>
    <result property="storageType" column="storage_type"/>
  </resultMap>

  <select id="findOne" resultMap="resultMap" resultType="dev.osmanthus.fleet.tool.develop.entity.Module">
    SELECT
    <include refid="column"/>
    FROM `develop_module`
    <if test="where != null and where != ''">
      <where>
        ${where}
      </where>
    </if>
    LIMIT 1
  </select>

  <select id="findMany" resultMap="resultMap" resultType="dev.osmanthus.fleet.tool.develop.entity.Module">
    SELECT
    <include refid="column"/>
    FROM `develop_module`
    <if test="where != null and where != ''">
      <where>
        ${where}
      </where>
    </if>
    <!--    <if test="order != null and order != ''">-->
    <!--      ORDER BY ${order}-->
    <!--    </if>-->
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY id DESC
      </otherwise>
    </choose>
  </select>

  <insert id="insertOne" parameterType="dev.osmanthus.fleet.tool.develop.entity.Module">
    INSERT INTO `develop_module`
    (<include refid="insertColumn"/>)
    VALUES
    (<include refid="insertValue"/>)
  </insert>

  <insert id="insertMany" parameterType="java.util.List">
    INSERT INTO `develop_module`
    (<include refid="insertColumn"/>)
    VALUES
    <foreach collection="list" item="module" separator=",">
      (<include refid="insertEntityValue"/>)
    </foreach>
  </insert>

  <update id="updateOne" parameterType="dev.osmanthus.fleet.tool.develop.entity.Module">
    UPDATE `develop_module`
    <include refid="updateColumn"/>
    WHERE id=#{id}
  </update>

  <!--  <update id="updateMany" parameterType="java.util.HashMap">-->
  <!--    UPDATE `module`-->
  <!--    <foreach collection="moduleList" item="module" separator=",">-->
  <!--      <include refid="updateColumn"/>-->
  <!--    </foreach>-->
  <!--    WHERE id=#{id} AND updated_count=#{updatedCount, jdbcType=INTEGER}-->
  <!--  </update>-->

  <delete id="deleteOne" parameterType="java.lang.String">
    DELETE FROM `develop_module` WHERE id=#{id}
  </delete>

  <select id="count" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM `develop_module`
    <if test="where != null and where != ''">
      <where>
        ${where}
      </where>
    </if>
    LIMIT 1
  </select>

</mapper>
